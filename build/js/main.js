!function(){"use strict";$(".j-popup-close").on("click",function(){$(this).parent().arcticmodal("close")}),$(".j-input-time").on("focusin",function(){$(this).attr({type:"time",value:"12:00"})}).on("focusout",function(){$(this).attr("type","text")}),$(".j-phone-masked").on("keydown",function(e){$.inArray(e.keyCode,[46,8,9,27,13,110,190])!==-1||65==e.keyCode&&(e.ctrlKey===!0||e.metaKey===!0)||e.keyCode>=35&&e.keyCode<=40||(e.shiftKey||e.keyCode<48||e.keyCode>57)&&(e.keyCode<96||e.keyCode>107)&&e.preventDefault()}),$(".j-scrollto-link").on("click",function(e){return $.scrollTo($(this).data("scrollto-block"),{duration:500}),!1})}(),function(){"use strict";Array.prototype.max=function(){return Math.max.apply(null,this)},Array.prototype.min=function(){return Math.min.apply(null,this)};var e=angular.module("main",[]);e.controller("mainController",["$scope","$http","$cacheFactory","$httpParamSerializerJQLike",function(e,r,t,o){function n(e){var r=/(\d+)(\d{3})/;return String(e).replace(/^\d+/,function(e){for(;r.test(e);)e=e.replace(r,"$1 $2");return e})}function a(e,r){return r.discount-e.discount}e.AbsentEmployees={},e.callbackFormData={},e.signFormData={},e.orderFormData={},e.subFormData={},e.barkliBrokerFormData={},e.isCallbackFormSended=!1,e.isSignFormSended=!1,e.issubFormSended=!1,e.isOrderFormSended=!1,e.isBarkliBrokerFormSended=!1,e.currentTab=2;var i=window.location.hash.split("/");i[1]||(i[1]="city"),i[1]||(i[1]="country"),i[1]||(i[1]="commerc"),"city"===i[1]&&(e.currentTab=2),"country"===i[1]&&(e.currentTab=3),"commerc"===i[1]&&(e.currentTab=4),e.params=[],e.country=[],e.commerc=[],e.showCallbackPopup=function(){e.isCallbackFormSended&&(e.isCallbackFormSended=!1),$(".j-popup-callback").arcticmodal()},e.sendCallbackForm=function(){e.callbackForm.$valid&&(e.callbackFormData.subject="Заказать обратный звонок. Скидки.",r({method:"POST",url:"/sendmail.php",data:t(e.callbackFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){e.callbackForm.$setPristine();for(var t in e.callbackFormData)e.callbackFormData[t]="";e.isCallbackFormSended=!0,setTimeout(function(){$(".j-popup-callback").arcticmodal("close")},3e3)}))},e.showSignPopup=function(){e.isSignFormSended&&(e.isSignFormSended=!1),$(".j-popup-gratitude-sign").arcticmodal()},e.sendSignForm=function(){e.signForm.$valid&&(e.signFormData.subject="Подписка на Discount",r({method:"POST",url:"/sendmail.php",data:t(e.signFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){e.signForm.$setPristine();for(var t in e.signFormData)e.signFormData[t]="";e.isSignFormSended=!0,setTimeout(function(){$(".j-popup-gratitude-sign").arcticmodal("close")},3e3)})),console.log(e.signForm)},e.sendOrderForm=function(){e.orderForm.$valid&&(e.orderFormData.subject="Заказать обратный звонок. Скидки.",r({method:"POST",url:"/sendmail.php",data:t(e.orderFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){$(".j-popup-gratitude-request").arcticmodal(),setTimeout(function(){$(".j-popup-gratitude-request").arcticmodal("close")},3e3),e.orderForm.$setPristine();for(var t in e.orderFormData)e.orderFormData[t]="";e.isOrderFormSended=!0,setTimeout(function(){$(".j-popup-gratitude-request").arcticmodal("close")},3e3)}))},e.sendSubForm=function(){e.subForm.$valid&&(e.subFormData.subject="Подписка на Discount",r({method:"POST",url:"/sendmail.php",data:t(e.subFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){$(".j-popup-gratitude-sign").arcticmodal(),setTimeout(function(){$(".j-popup-gratitude-sign").arcticmodal("close")},3e3),e.subForm.$setPristine();for(var t in e.subFormData)e.subFormData[t]="";e.issubFormSended=!0,setTimeout(function(){$(".j-popup-gratitude-sign").arcticmodal("close")},3e3)}))},2==e.currentTab?r.get("city.json").success(function(r){console.log("get"),r.sort(a);for(var t=0;t<r.length;t+=1){var o=r[t];"city"==o.suptype&&e.params.push({id:o.id,city:!0,rooms:parseInt(o.nb_rooms)?parseInt(o.nb_rooms)+" - ком. кв., ":" ",decoration:o.decoration||"",floor:parseInt(o.floor)?", "+(parseInt(o.floor)+"-й этаж"):"",head:o.estate,discount:parseFloat(o.discount),square:parseFloat(o.area),old_price:n(parseInt(o.old_price/1)),new_price:n(parseInt(o.new_price/1)),img:o.photo,link:o.link}),e.AbsentEmployees.employees=r,c.dataLoaded=!0,e.filter=function(e,r){var t={};return angular.forEach(e,function(e,o){e[r]&&(t[o]=e)}),t},e.test=function(e){var r=0,t=document.querySelectorAll(".b-discount_inner"),o=document.querySelectorAll(".b-form");r=parseInt(t[e].children.length/2)%2?parseInt(t[e].children.length/2)+1:parseInt(t[e].children.length/2),t[e].children[r-1].insertAfter(o[e])}}}):3==e.currentTab?r.get("country.json").success(function(r){r.sort(a);for(var t=0;t<r.length;t+=1){var o=r[t];"country"==o.suptype&&e.params.push({id:o.id,country:!0,desc:o.direction+", "+o.distance+" км от МКАД",head:o.estate,discount:parseFloat(o.discount),square:parseFloat(o.land_area)?+o.land_area+" сот., ":"",housearea:parseFloat(o.house_area)?""+o.house_area+" м²":"",old_price:n(parseInt(o.old_price)),new_price:n(parseInt(o.new_price)),img:o.photo,link:o.link}),e.AbsentEmployees.employees=r,c.dataLoaded=!0,e.filter=function(e,r){var t={};return angular.forEach(e,function(e,o){e[r]&&(t[o]=e)}),t},e.test=function(e){var r=0,t=document.querySelectorAll(".b-discount_inner"),o=document.querySelectorAll(".b-form");r=parseInt(t[e].children.length/2)%2?parseInt(t[e].children.length/2)+1:parseInt(t[e].children.length/2),t[e].children[r-1].insertAfter(o[e])}}}):4==e.currentTab&&r.get("commerc.json").success(function(r){r.sort(a);for(var t=0;t<r.length;t+=1){var o=r[t];"commerce"==o.suptype&&e.params.push({id:o.id,commerce:!0,desc:o.metro+", "+o.distance,head:o.address||o.name,discount:parseFloat(o.discount),square:parseFloat(o.area),old_price:n(parseInt(o.old_price/1)),new_price:n(parseInt(o.new_price/1)),img:o.photo,link:o.link}),e.AbsentEmployees.employees=r,c.dataLoaded=!0,e.filter=function(e,r){var t={};return angular.forEach(e,function(e,o){e[r]&&(t[o]=e)}),t},e.test=function(e){var r=0,t=document.querySelectorAll(".b-discount_inner"),o=document.querySelectorAll(".b-form");r=parseInt(t[e].children.length/2)%2?parseInt(t[e].children.length/2)+1:parseInt(t[e].children.length/2),t[e].children[r-1].insertAfter(o[e])}}}),e.showSignPopup=function(){e.isSignFormSended&&(e.isSignFormSended=!1),$(".j-popup-sign").arcticmodal()};var c=e.AbsentEmployees;c.dataLoaded=!1}]),e.directive("repeatEnd",function(){return{restrict:"A",link:function(e,r,t){e.$last&&e.$eval(t.repeatEnd)}}}),Element.prototype.insertAfter=function(e){return this.parentNode.insertBefore(e,this.nextSibling)}}(),$(window).scroll(function(){$(this).scrollTop()>540?($(".fixed-header").addClass("sticky"),$(".fixed-header").removeClass("hidden")):($(".fixed-header").removeClass("sticky"),$(".fixed-header").addClass("hidden"))});
//# sourceMappingURL=data:application/json;base64,

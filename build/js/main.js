!function(){"use strict";$(".j-popup-close").on("click",function(){$(this).parent().arcticmodal("close")}),$(".j-input-time").on("focusin",function(){$(this).attr({type:"time",value:"12:00"})}).on("focusout",function(){$(this).attr("type","text")}),$(".j-phone-masked").on("keydown",function(e){$.inArray(e.keyCode,[46,8,9,27,13,110,190])!==-1||65==e.keyCode&&(e.ctrlKey===!0||e.metaKey===!0)||e.keyCode>=35&&e.keyCode<=40||(e.shiftKey||e.keyCode<48||e.keyCode>57)&&(e.keyCode<96||e.keyCode>107)&&e.preventDefault()}),$(".j-scrollto-link").on("click",function(e){return $.scrollTo($(this).data("scrollto-block"),{duration:500}),!1})}(),function(){"use strict";Array.prototype.max=function(){return Math.max.apply(null,this)},Array.prototype.min=function(){return Math.min.apply(null,this)};var e=angular.module("main",[]);e.controller("mainController",["$scope","$http","$httpParamSerializerJQLike",function(e,r,a){function t(e){var r=/(\d+)(\d{3})/;return String(e).replace(/^\d+/,function(e){for(;r.test(e);)e=e.replace(r,"$1 $2");return e})}function o(e,r){return r.discount-e.discount}e.callbackFormData={},e.orderFormData={},e.barkliBrokerFormData={},e.isCallbackFormSended=!1,e.isBarkliBrokerFormSended=!1,e.currentTab=1,e.params=[],e.country=[],e.commerc=[],e.showCallbackPopup=function(){e.isCallbackFormSended&&(e.isCallbackFormSended=!1),$(".j-popup-callback").arcticmodal()},e.sendCallbackForm=function(){e.callbackForm.$valid&&(e.callbackFormData.subject="Заказать обратный звонок",r({method:"POST",url:"/sendmail.php",data:a(e.callbackFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){e.callbackForm.$setPristine();for(var a in e.callbackFormData)e.callbackFormData[a]="";e.isCallbackFormSended=!0,setTimeout(function(){$(".j-popup-callback").arcticmodal("close")},3e3),ga("send","event","callback","click button"),yaCounter19895512.reachGoal("callback")}))},e.showSignPopup=function(){e.isSignFormSended&&(e.isSignFormSended=!1),$(".j-popup-sign").arcticmodal()},e.sendSignForm=function(){e.signForm.$valid&&(e.signFormData.subject="Заказать обратный звонок ЖК Андреевский",r({method:"POST",url:"/sendmail.php",data:a(e.callbackFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){e.callbackForm.$setPristine();for(var a in e.callbackFormData)e.callbackFormData[a]="";e.isCallbackFormSended=!0,setTimeout(function(){$(".j-popup-sign").arcticmodal("close")},3e3),ga("send","event","callback","click button"),yaCounter19895512.reachGoal("callback")}))},e.sendBarkliBrokerForm=function(){e.barkliBrokerForm.$valid&&(e.barkliBrokerFormData.subject="Заявка на квартиру ЖК Андреевский",e.barkliBrokerFormData.email="voronkov@kre.ru",r({method:"POST",url:"/sendmail.php",data:a(e.barkliBrokerFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){e.barkliBrokerForm.$setPristine();for(var a in e.barkliBrokerFormData)e.barkliBrokerFormData[a]="";e.isBarkliBrokerFormSended=!0,setTimeout(function(){$(".j-popup-barkli-broker").arcticmodal("close")},3e3),ga("send","event","callback","click button"),yaCounter19895512.reachGoal("callback")}))},r.get("http://www.kre.ru/landing/sale/").success(function(r){r.sort(o);for(var a=0;a<r.length;a+=1){var n=r[a];"city"==n.suptype?e.params.push({id:n.id,city:!0,desc:parseInt(n.nb_rooms)+" - ком кв, "+n.decoration+", "+n.floor+"-й этаж",head:n.estate,discount:parseFloat(n.discount),square:parseFloat(n.area),old_price:t(parseInt(n.old_price/1)),new_price:t(parseInt(n.new_price/1)),img:n.photo,link:"http://www.kre.ru/offers/eliteflat/"+n.id}):"country"==n.suptype?e.params.push({id:n.id,country:!0,desc:n.direction+" "+n.distance+" км. от МКАД",head:n.estate,discount:parseFloat(n.discount),square:parseFloat(n.land_area)+" сот., "+parseFloat(n.house_area),old_price:t(parseInt(n.old_price/1)),new_price:t(parseInt(n.new_price/1)),img:n.photo,link:"http://www.kre.ru/offers/outoftown/"+n.id}):"commerce"==n.suptype&&e.params.push({id:n.id,commerce:!0,desc:n.district+" м. "+n.metro+" "+n.distance,head:n.address,discount:parseFloat(n.discount),square:parseFloat(n.area),old_price:t(parseInt(n.old_price/1)),new_price:t(parseInt(n.new_price/1)),img:n.photo,link:"http://www.kre.ru/offers/comsell/"+n.id}),e.filter=function(e,r){var a={};return angular.forEach(e,function(e,t){e[r]&&(a[t]=e)}),a},e.test=function(e){var r=0,a=document.querySelectorAll(".b-discount_inner"),t=document.querySelectorAll(".b-form");r=parseInt(a[e].children.length/2)%2?parseInt(a[e].children.length/2)+1:parseInt(a[e].children.length/2),a[e].children[r-1].insertAfter(t[e].cloneNode(!0)),t[e].parentNode.removeChild(t[e])}}})}]),e.directive("repeatEnd",function(){return{restrict:"A",link:function(e,r,a){e.$last&&e.$eval(a.repeatEnd)}}}),Element.prototype.insertAfter=function(e){return this.parentNode.insertBefore(e,this.nextSibling)}}(),$(window).scroll(function(){$(this).scrollTop()>540?($(".fixed-header").addClass("sticky"),$(".fixed-header").removeClass("hidden")):($(".fixed-header").removeClass("sticky"),$(".fixed-header").addClass("hidden"))});
//# sourceMappingURL=data:application/json;base64,

!function(){"use strict";$(".j-popup-close").on("click",function(){$(this).parent().arcticmodal("close")}),$(".j-input-time").on("focusin",function(){$(this).attr({type:"time",value:"12:00"})}).on("focusout",function(){$(this).attr("type","text")}),$(".j-phone-masked").on("keydown",function(e){$.inArray(e.keyCode,[46,8,9,27,13,110,190])!==-1||65==e.keyCode&&(e.ctrlKey===!0||e.metaKey===!0)||e.keyCode>=35&&e.keyCode<=40||(e.shiftKey||e.keyCode<48||e.keyCode>57)&&(e.keyCode<96||e.keyCode>107)&&e.preventDefault()}),$(".j-scrollto-link").on("click",function(e){return $.scrollTo($(this).data("scrollto-block"),{duration:500}),!1})}(),function(){"use strict";Array.prototype.max=function(){return Math.max.apply(null,this)},Array.prototype.min=function(){return Math.min.apply(null,this)};var e=angular.module("main",[]);e.controller("mainController",["$scope","$http","$cacheFactory","$httpParamSerializerJQLike",function(e,r,t,o){function n(e){var r=/(\d+)(\d{3})/;return String(e).replace(/^\d+/,function(e){for(;r.test(e);)e=e.replace(r,"$1 $2");return e})}function a(e,r){return r.discount-e.discount}e.AbsentEmployees={},e.callbackFormData={},e.signFormData={},e.orderFormData={},e.subFormData={},e.barkliBrokerFormData={},e.isCallbackFormSended=!1,e.isSignFormSended=!1,e.issubFormSended=!1,e.isOrderFormSended=!1,e.isBarkliBrokerFormSended=!1,e.currentTab=2;var i=window.location.hash.split("/");i[1]||(i[1]="city"),i[1]||(i[1]="country"),i[1]||(i[1]="commerc"),"city"===i[1]&&(e.currentTab=2),"country"===i[1]&&(e.currentTab=3),"commerc"===i[1]&&(e.currentTab=4),e.params=[],e.country=[],e.commerc=[],e.showCallbackPopup=function(){e.isCallbackFormSended&&(e.isCallbackFormSended=!1),$(".j-popup-callback").arcticmodal()},e.sendCallbackForm=function(){e.callbackForm.$valid&&(e.callbackFormData.subject="Заказать обратный звонок. Скидки.",r({method:"POST",url:"/sendmail.php",data:t(e.callbackFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){e.callbackForm.$setPristine();for(var t in e.callbackFormData)e.callbackFormData[t]="";e.isCallbackFormSended=!0,setTimeout(function(){$(".j-popup-callback").arcticmodal("close")},3e3)}))},e.showSignPopup=function(){e.isSignFormSended&&(e.isSignFormSended=!1),$(".j-popup-gratitude-sign").arcticmodal()},e.sendSignForm=function(){e.signForm.$valid&&(e.signFormData.subject="Подписка на Discount",r({method:"POST",url:"/sendmail.php",data:t(e.signFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){e.signForm.$setPristine();for(var t in e.signFormData)e.signFormData[t]="";e.isSignFormSended=!0,setTimeout(function(){$(".j-popup-gratitude-sign").arcticmodal("close")},3e3)})),console.log(e.signForm)},e.sendOrderForm=function(){e.orderForm.$valid&&(e.orderFormData.subject="Заказать обратный звонок. Скидки.",r({method:"POST",url:"/sendmail.php",data:t(e.orderFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){$(".j-popup-gratitude-request").arcticmodal(),setTimeout(function(){$(".j-popup-gratitude-request").arcticmodal("close")},3e3),e.orderForm.$setPristine();for(var t in e.orderFormData)e.orderFormData[t]="";e.isOrderFormSended=!0,setTimeout(function(){$(".j-popup-gratitude-request").arcticmodal("close")},3e3)}))},e.sendSubForm=function(){e.subForm.$valid&&(e.subFormData.subject="Подписка на Discount",r({method:"POST",url:"/sendmail.php",data:t(e.subFormData),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(r){$(".j-popup-gratitude-sign").arcticmodal(),setTimeout(function(){$(".j-popup-gratitude-sign").arcticmodal("close")},3e3),e.subForm.$setPristine();for(var t in e.subFormData)e.subFormData[t]="";e.issubFormSended=!0,setTimeout(function(){$(".j-popup-gratitude-sign").arcticmodal("close")},3e3)}))},2==e.currentTab?r.get("city.json").success(function(r){r.sort(a);for(var t=0;t<r.length;t+=1){var o=r[t];"city"==o.suptype&&e.params.push({id:o.id,city:!0,rooms:parseInt(o.nb_rooms)?parseInt(o.nb_rooms)+" - ком. кв., ":" ",decoration:o.decoration||"",floor:parseInt(o.floor)?", "+(parseInt(o.floor)+"-й этаж"):"",head:o.estate,discount:parseFloat(o.discount),square:parseFloat(o.area),old_price:n(parseInt(o.old_price/1)),new_price:n(parseInt(o.new_price/1)),img:o.photo,link:o.link}),e.AbsentEmployees.employees=r,c.dataLoaded=!0,e.filter=function(e,r){var t={};return angular.forEach(e,function(e,o){e[r]&&(t[o]=e)}),t},e.test=function(e){var r=0,t=document.querySelectorAll(".b-discount_inner"),o=document.querySelectorAll(".b-form");r=parseInt(t[e].children.length/2)%2?parseInt(t[e].children.length/2)+1:parseInt(t[e].children.length/2),t[e].children[r-1].insertAfter(o[e])}}}):3==e.currentTab?r.get("country.json").success(function(r){r.sort(a);for(var t=0;t<r.length;t+=1){var o=r[t];"country"==o.suptype&&e.params.push({id:o.id,country:!0,desc:o.direction+", "+o.distance+" км от МКАД",head:o.estate,discount:parseFloat(o.discount),square:parseFloat(o.land_area)?+o.land_area+" сот., ":"",housearea:parseFloat(o.house_area)?""+o.house_area+" м²":"",old_price:n(parseInt(o.old_price)),new_price:n(parseInt(o.new_price)),img:o.photo,link:o.link}),e.AbsentEmployees.employees=r,c.dataLoaded=!0,e.filter=function(e,r){var t={};return angular.forEach(e,function(e,o){e[r]&&(t[o]=e)}),t},e.test=function(e){var r=0,t=document.querySelectorAll(".b-discount_inner"),o=document.querySelectorAll(".b-form");r=parseInt(t[e].children.length/2)%2?parseInt(t[e].children.length/2)+1:parseInt(t[e].children.length/2),t[e].children[r-1].insertAfter(o[e])}}}):4==e.currentTab&&r.get("commerc.json").success(function(r){r.sort(a);for(var t=0;t<r.length;t+=1){var o=r[t];"commerce"==o.suptype&&e.params.push({id:o.id,commerce:!0,desc:o.metro+", "+o.distance,head:o.address||o.name,discount:parseFloat(o.discount),square:parseFloat(o.area),old_price:n(parseInt(o.old_price/1)),new_price:n(parseInt(o.new_price/1)),img:o.photo,link:o.link}),e.AbsentEmployees.employees=r,c.dataLoaded=!0,e.filter=function(e,r){var t={};return angular.forEach(e,function(e,o){e[r]&&(t[o]=e)}),t},e.test=function(e){var r=0,t=document.querySelectorAll(".b-discount_inner"),o=document.querySelectorAll(".b-form");r=parseInt(t[e].children.length/2)%2?parseInt(t[e].children.length/2)+1:parseInt(t[e].children.length/2),t[e].children[r-1].insertAfter(o[e])}}}),e.showSignPopup=function(){e.isSignFormSended&&(e.isSignFormSended=!1),$(".j-popup-sign").arcticmodal()};var c=e.AbsentEmployees;c.dataLoaded=!1}]),e.directive("repeatEnd",function(){return{restrict:"A",link:function(e,r,t){e.$last&&e.$eval(t.repeatEnd)}}}),Element.prototype.insertAfter=function(e){return this.parentNode.insertBefore(e,this.nextSibling)}}(),$(window).scroll(function(){$(this).scrollTop()>540?($(".fixed-header").addClass("sticky"),$(".fixed-header").removeClass("hidden")):($(".fixed-header").removeClass("sticky"),$(".fixed-header").addClass("hidden"))});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsIm9uIiwidGhpcyIsInBhcmVudCIsImFyY3RpY21vZGFsIiwiYXR0ciIsInR5cGUiLCJ2YWx1ZSIsImUiLCJpbkFycmF5Iiwia2V5Q29kZSIsImN0cmxLZXkiLCJtZXRhS2V5Iiwic2hpZnRLZXkiLCJwcmV2ZW50RGVmYXVsdCIsImV2ZW50Iiwic2Nyb2xsVG8iLCJkYXRhIiwiZHVyYXRpb24iLCJBcnJheSIsInByb3RvdHlwZSIsIm1heCIsIk1hdGgiLCJhcHBseSIsIm1pbiIsImFwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiJGh0dHAiLCIkaHR0cFBhcmFtU2VyaWFsaXplckpRTGlrZSIsIiRjYWNoZUZhY3RvcnkiLCJhZGRTcGFjZXMiLCJuIiwicngiLCJTdHJpbmciLCJyZXBsYWNlIiwidyIsInRlc3QiLCJzb3J0Iiwib2JqMSIsIm9iajIiLCJkaXNjb3VudCIsIkFic2VudEVtcGxveWVlcyIsImNhbGxiYWNrRm9ybURhdGEiLCJzaWduRm9ybURhdGEiLCJvcmRlckZvcm1EYXRhIiwic3ViRm9ybURhdGEiLCJiYXJrbGlCcm9rZXJGb3JtRGF0YSIsImlzQ2FsbGJhY2tGb3JtU2VuZGVkIiwiaXNTaWduRm9ybVNlbmRlZCIsImlzc3ViRm9ybVNlbmRlZCIsImlzT3JkZXJGb3JtU2VuZGVkIiwiaXNCYXJrbGlCcm9rZXJGb3JtU2VuZGVkIiwiY3VycmVudFRhYiIsImxvY2F0aW9uIiwid2luZG93IiwiaGFzaCIsInNwbGl0IiwicGFyYW1zIiwiY291bnRyeSIsImNvbW1lcmMiLCJzaG93Q2FsbGJhY2tQb3B1cCIsInNlbmRDYWxsYmFja0Zvcm0iLCJjYWxsYmFja0Zvcm0iLCIkdmFsaWQiLCJtZXRob2QiLCJ1cmwiLCJoZWFkZXJzIiwiQ29udGVudC1UeXBlIiwic3VjY2VzcyIsIiRzZXRQcmlzdGluZSIsInByb3AiLCJzZXRUaW1lb3V0Iiwic2hvd1NpZ25Qb3B1cCIsInNlbmRTaWduRm9ybSIsInNpZ25Gb3JtIiwiY29uc29sZSIsImxvZyIsInNlbmRPcmRlckZvcm0iLCJvcmRlckZvcm0iLCJzZW5kU3ViRm9ybSIsInN1YkZvcm0iLCJnZXQiLCJpIiwibGVuZ3RoIiwiY3VycmVudEZsYXQiLCJzdXB0eXBlIiwicHVzaCIsImlkIiwiY2l0eSIsInJvb21zIiwicGFyc2VJbnQiLCJkZWNvcmF0aW9uIiwiZmxvb3IiLCJoZWFkIiwiZXN0YXRlIiwicGFyc2VGbG9hdCIsInNxdWFyZSIsImFyZWEiLCJvbGRfcHJpY2UiLCJuZXdfcHJpY2UiLCJpbWciLCJwaG90byIsImxpbmsiLCJlbXBsb3llZXMiLCJhYkVtcGxveWVlcyIsImRhdGFMb2FkZWQiLCJmaWx0ZXIiLCJpdGVtcyIsInJlc3VsdCIsImZvckVhY2giLCJrZXkiLCJjdXJyZW50IiwiY2VudGVyIiwiYmxvY2tzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybXMiLCJjaGlsZHJlbiIsImluc2VydEFmdGVyIiwiZGVzYyIsImRpcmVjdGlvbiIsImRpc3RhbmNlIiwiaG91c2VhcmVhIiwiY29tbWVyY2UiLCJtZXRybyIsImFkZHJlc3MiLCJuYW1lIiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJzY29wZSIsImVsZW1lbnQiLCJhdHRycyIsIiRsYXN0IiwiJGV2YWwiLCJyZXBlYXRFbmQiLCJFbGVtZW50IiwiZWxlbSIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJuZXh0U2libGluZyIsInNjcm9sbCIsInNjcm9sbFRvcCIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiXSwibWFwcGluZ3MiOiJDQUdBLFdBQ0ksWUFFQUEsR0FBRSxrQkFBa0JDLEdBQUcsUUFBUyxXQUM1QkQsRUFBRUUsTUFBTUMsU0FBU0MsWUFBWSxXQUdqQ0osRUFBRSxpQkFBaUJDLEdBQUcsVUFBVyxXQUM3QkQsRUFBRUUsTUFBTUcsTUFBTUMsS0FBTSxPQUFRQyxNQUFPLFlBQ3BDTixHQUFHLFdBQVksV0FDZEQsRUFBRUUsTUFBTUcsS0FBSyxPQUFRLFVBR3pCTCxFQUFFLG1CQUFtQkMsR0FBRyxVQUFXLFNBQVVPLEdBQ3JDUixFQUFFUyxRQUFRRCxFQUFFRSxTQUFVLEdBQUksRUFBRyxFQUFHLEdBQUksR0FBSSxJQUFLLFlBQy9CLElBQWJGLEVBQUVFLFVBQW1CRixFQUFFRyxXQUFZLEdBQVFILEVBQUVJLFdBQVksSUFDekRKLEVBQUVFLFNBQVcsSUFBTUYsRUFBRUUsU0FBVyxLQUdoQ0YsRUFBRUssVUFBYUwsRUFBRUUsUUFBVSxJQUFNRixFQUFFRSxRQUFVLE1BQVNGLEVBQUVFLFFBQVUsSUFBTUYsRUFBRUUsUUFBVSxNQUNyRkYsRUFBRU0sbUJBR1ZkLEVBQUUsb0JBQW9CQyxHQUFHLFFBQVMsU0FBU2MsR0FLdkMsTUFKQWYsR0FBRWdCLFNBQ0VoQixFQUFFRSxNQUFNZSxLQUFLLG1CQUNaQyxTQUFVLE9BRVIsT0FJZixXQUNJLFlBRUFDLE9BQU1DLFVBQVVDLElBQU0sV0FDbEIsTUFBT0MsTUFBS0QsSUFBSUUsTUFBTSxLQUFNckIsT0FHaENpQixNQUFNQyxVQUFVSSxJQUFNLFdBQ2xCLE1BQU9GLE1BQUtFLElBQUlELE1BQU0sS0FBTXJCLE1BR2hDLElBQUl1QixHQUFNQyxRQUFRQyxPQUFPLFVBRXpCRixHQUFJRyxXQUFXLGtCQUFtQixTQUFVLFFBQVMsZ0JBQWlCLDZCQUE4QixTQUFTQyxFQUFRQyxFQUFPQyxFQUE0QkMsR0E0UnBKLFFBQVNDLEdBQVVDLEdBQ2YsR0FBSUMsR0FBSyxjQUNULE9BQU9DLFFBQU9GLEdBQ1RHLFFBQVEsT0FBUSxTQUFVQyxHQUN2QixLQUFPSCxFQUFHSSxLQUFLRCxJQUNYQSxFQUFJQSxFQUFFRCxRQUFRRixFQUFJLFFBRXRCLE9BQU9HLEtBR25CLFFBQVNFLEdBQUtDLEVBQU1DLEdBQ2hCLE1BQU9BLEdBQUtDLFNBQVdGLEVBQUtFLFNBdFNoQ2QsRUFBT2UsbUJBQ1BmLEVBQU9nQixvQkFDUGhCLEVBQU9pQixnQkFDUGpCLEVBQU9rQixpQkFDUGxCLEVBQU9tQixlQUNQbkIsRUFBT29CLHdCQUNQcEIsRUFBT3FCLHNCQUF1QixFQUM5QnJCLEVBQU9zQixrQkFBbUIsRUFDMUJ0QixFQUFPdUIsaUJBQWtCLEVBQ3pCdkIsRUFBT3dCLG1CQUFvQixFQUMzQnhCLEVBQU95QiwwQkFBMkIsRUFDbEN6QixFQUFPMEIsV0FBYSxDQUNwQixJQUFJQyxHQUFXQyxPQUFPRCxTQUFTRSxLQUFLQyxNQUFNLElBQ3JDSCxHQUFTLEtBQUlBLEVBQVMsR0FBSyxRQUMzQkEsRUFBUyxLQUFJQSxFQUFTLEdBQUssV0FDM0JBLEVBQVMsS0FBSUEsRUFBUyxHQUFLLFdBQ1osU0FBaEJBLEVBQVMsS0FBZTNCLEVBQU8wQixXQUFhLEdBQzVCLFlBQWhCQyxFQUFTLEtBQWtCM0IsRUFBTzBCLFdBQWEsR0FDL0IsWUFBaEJDLEVBQVMsS0FBa0IzQixFQUFPMEIsV0FBYSxHQUNuRDFCLEVBQU8rQixVQUNQL0IsRUFBT2dDLFdBQ1BoQyxFQUFPaUMsV0FNUGpDLEVBQU9rQyxrQkFBb0IsV0FDbkJsQyxFQUFPcUIsdUJBQXNCckIsRUFBT3FCLHNCQUF1QixHQUMvRGxELEVBQUUscUJBQXFCSSxlQUczQnlCLEVBQU9tQyxpQkFBbUIsV0FDbEJuQyxFQUFPb0MsYUFBYUMsU0FDcEJyQyxFQUFPZ0IsaUJBQTBCLFFBQUksb0NBQ3JDZixHQUNJcUMsT0FBUSxPQUNSQyxJQUFLLGdCQUNMbkQsS0FBTWMsRUFBMkJGLEVBQU9nQixrQkFDeEN3QixTQUFVQyxlQUFnQix1Q0FDM0JDLFFBQVEsU0FBU3RELEdBQ2hCWSxFQUFPb0MsYUFBYU8sY0FDcEIsS0FBSyxHQUFJQyxLQUFRNUMsR0FBT2dCLGlCQUNwQmhCLEVBQU9nQixpQkFBaUI0QixHQUFRLEVBRXBDNUMsR0FBT3FCLHNCQUF1QixFQUM5QndCLFdBQVcsV0FDUDFFLEVBQUUscUJBQXFCSSxZQUFZLFVBQ3BDLFNBT2Z5QixFQUFPOEMsY0FBZ0IsV0FDZjlDLEVBQU9zQixtQkFBa0J0QixFQUFPc0Isa0JBQW1CLEdBQ3ZEbkQsRUFBRSwyQkFBMkJJLGVBR2pDeUIsRUFBTytDLGFBQWUsV0FDZC9DLEVBQU9nRCxTQUFTWCxTQUNoQnJDLEVBQU9pQixhQUFzQixRQUFJLHVCQUNqQ2hCLEdBQ0lxQyxPQUFRLE9BQ1JDLElBQUssZ0JBQ0xuRCxLQUFNYyxFQUEyQkYsRUFBT2lCLGNBQ3hDdUIsU0FBVUMsZUFBZ0IsdUNBQzNCQyxRQUFRLFNBQVN0RCxHQUNoQlksRUFBT2dELFNBQVNMLGNBQ2hCLEtBQUssR0FBSUMsS0FBUTVDLEdBQU9pQixhQUNwQmpCLEVBQU9pQixhQUFhMkIsR0FBUSxFQUVoQzVDLEdBQU9zQixrQkFBbUIsRUFDMUJ1QixXQUFXLFdBQ1AxRSxFQUFFLDJCQUEyQkksWUFBWSxVQUMxQyxRQUdYMEUsUUFBUUMsSUFBSWxELEVBQU9nRCxXQU12QmhELEVBQU9tRCxjQUFnQixXQUNmbkQsRUFBT29ELFVBQVVmLFNBQ2pCckMsRUFBT2tCLGNBQXVCLFFBQUksb0NBQ2xDakIsR0FDSXFDLE9BQVEsT0FDUkMsSUFBSyxnQkFDTG5ELEtBQU1jLEVBQTJCRixFQUFPa0IsZUFDeENzQixTQUFVQyxlQUFnQix1Q0FDM0JDLFFBQVEsU0FBU3RELEdBQ2hCakIsRUFBRSw4QkFBOEJJLGNBQ2hDc0UsV0FBVyxXQUNQMUUsRUFBRSw4QkFBOEJJLFlBQVksVUFDN0MsS0FDSHlCLEVBQU9vRCxVQUFVVCxjQUNqQixLQUFLLEdBQUlDLEtBQVE1QyxHQUFPa0IsY0FDcEJsQixFQUFPa0IsY0FBYzBCLEdBQVEsRUFFakM1QyxHQUFPd0IsbUJBQW9CLEVBQzNCcUIsV0FBVyxXQUNQMUUsRUFBRSw4QkFBOEJJLFlBQVksVUFDN0MsU0FLZnlCLEVBQU9xRCxZQUFjLFdBQ2JyRCxFQUFPc0QsUUFBUWpCLFNBQ2ZyQyxFQUFPbUIsWUFBcUIsUUFBSSx1QkFDaENsQixHQUNJcUMsT0FBUSxPQUNSQyxJQUFLLGdCQUNMbkQsS0FBTWMsRUFBMkJGLEVBQU9tQixhQUN4Q3FCLFNBQVVDLGVBQWdCLHVDQUMzQkMsUUFBUSxTQUFTdEQsR0FDaEJqQixFQUFFLDJCQUEyQkksY0FDN0JzRSxXQUFXLFdBQ1AxRSxFQUFFLDJCQUEyQkksWUFBWSxVQUMxQyxLQUNIeUIsRUFBT3NELFFBQVFYLGNBQ2YsS0FBSyxHQUFJQyxLQUFRNUMsR0FBT21CLFlBQ3BCbkIsRUFBT21CLFlBQVl5QixHQUFRLEVBRS9CNUMsR0FBT3VCLGlCQUFrQixFQUN6QnNCLFdBQVcsV0FDUDFFLEVBQUUsMkJBQTJCSSxZQUFZLFVBQzFDLFNBS1MsR0FBckJ5QixFQUFPMEIsV0FDTnpCLEVBQU1zRCxJQUFJLGFBQWFiLFFBQVEsU0FBU3RELEdBQ3BDQSxFQUFLdUIsS0FBS0EsRUFDVixLQUFJLEdBQUk2QyxHQUFJLEVBQUdBLEVBQUlwRSxFQUFLcUUsT0FBUUQsR0FBSyxFQUFHLENBQ3BDLEdBQUlFLEdBQWN0RSxFQUFLb0UsRUFDSSxTQUF2QkUsRUFBWUMsU0FDWjNELEVBQU8rQixPQUFPNkIsTUFDVkMsR0FBSUgsRUFBWUcsR0FDaEJDLE1BQU0sRUFDTkMsTUFBUUMsU0FBU04sRUFBc0IsVUFBTU0sU0FBU04sRUFBc0IsVUFBRyxnQkFBbUIsSUFDbEdPLFdBQVlQLEVBQVlPLFlBQWMsR0FDdENDLE1BQVFGLFNBQVNOLEVBQVlRLE9BQVMsTUFBTUYsU0FBU04sRUFBWVEsT0FBUyxXQUFhLEdBQ3ZGQyxLQUFNVCxFQUFZVSxPQUNsQnRELFNBQVV1RCxXQUFXWCxFQUFZNUMsVUFDakN3RCxPQUFRRCxXQUFXWCxFQUFZYSxNQUMvQkMsVUFBV3BFLEVBQVU0RCxTQUFTTixFQUF1QixVQUFFLElBQ3ZEZSxVQUFXckUsRUFBVTRELFNBQVNOLEVBQXVCLFVBQUUsSUFDdkRnQixJQUFLaEIsRUFBWWlCLE1BQ2pCQyxLQUFNbEIsRUFBWWtCLE9BSTFCNUUsRUFBT2UsZ0JBQWdCOEQsVUFBWXpGLEVBQ25DMEYsRUFBWUMsWUFBYSxFQUV6Qi9FLEVBQU9nRixPQUFTLFNBQVNDLEVBQU96RyxHQUM1QixHQUFJMEcsS0FNSixPQUxBckYsU0FBUXNGLFFBQVFGLEVBQU8sU0FBU3ZHLEVBQU8wRyxHQUMvQjFHLEVBQU1GLEtBQ04wRyxFQUFPRSxHQUFPMUcsS0FHZndHLEdBRVhsRixFQUFPVSxLQUFPLFNBQVMyRSxHQUNuQixHQUFJQyxHQUFTLEVBQ1RDLEVBQVNDLFNBQVNDLGlCQUFpQixxQkFDbkNDLEVBQVFGLFNBQVNDLGlCQUFpQixVQUdsQ0gsR0FEQXRCLFNBQVN1QixFQUFPRixHQUFTTSxTQUFTbEMsT0FBTyxHQUFHLEVBQ25DTyxTQUFTdUIsRUFBT0YsR0FBU00sU0FBU2xDLE9BQVMsR0FBSyxFQUdoRE8sU0FBU3VCLEVBQU9GLEdBQVNNLFNBQVNsQyxPQUFPLEdBRXREOEIsRUFBT0YsR0FBU00sU0FBU0wsRUFBTyxHQUFHTSxZQUFZRixFQUFNTCxRQUlyQyxHQUFyQnJGLEVBQU8wQixXQUNkekIsRUFBTXNELElBQUksZ0JBQWdCYixRQUFRLFNBQVN0RCxHQUN2Q0EsRUFBS3VCLEtBQUtBLEVBQ1YsS0FBSSxHQUFJNkMsR0FBSSxFQUFHQSxFQUFJcEUsRUFBS3FFLE9BQVFELEdBQUssRUFBRyxDQUNwQyxHQUFJRSxHQUFjdEUsRUFBS29FLEVBQ0ksWUFBdkJFLEVBQVlDLFNBQ1ozRCxFQUFPK0IsT0FBTzZCLE1BQ1ZDLEdBQUlILEVBQVlHLEdBQ2hCN0IsU0FBUyxFQUNUNkQsS0FBTW5DLEVBQVlvQyxVQUFZLEtBQU9wQyxFQUFZcUMsU0FBUyxjQUMxRDVCLEtBQU1ULEVBQVlVLE9BQ2xCdEQsU0FBVXVELFdBQVdYLEVBQVk1QyxVQUNqQ3dELE9BQVNELFdBQVdYLEVBQXVCLFlBQU1BLEVBQXVCLFVBQUUsVUFBVyxHQUNyRnNDLFVBQVkzQixXQUFXWCxFQUF3QixZQUFLLEdBQUdBLEVBQXdCLFdBQUUsTUFBTyxHQUN4RmMsVUFBV3BFLEVBQVU0RCxTQUFTTixFQUF1QixZQUNyRGUsVUFBV3JFLEVBQVU0RCxTQUFTTixFQUF1QixZQUNyRGdCLElBQUtoQixFQUFZaUIsTUFDakJDLEtBQU1sQixFQUFZa0IsT0FHMUI1RSxFQUFPZSxnQkFBZ0I4RCxVQUFZekYsRUFDbkMwRixFQUFZQyxZQUFhLEVBRXpCL0UsRUFBT2dGLE9BQVMsU0FBU0MsRUFBT3pHLEdBQzVCLEdBQUkwRyxLQU1KLE9BTEFyRixTQUFRc0YsUUFBUUYsRUFBTyxTQUFTdkcsRUFBTzBHLEdBQy9CMUcsRUFBTUYsS0FDTjBHLEVBQU9FLEdBQU8xRyxLQUdmd0csR0FFWGxGLEVBQU9VLEtBQU8sU0FBUzJFLEdBQ25CLEdBQUlDLEdBQVMsRUFDVEMsRUFBU0MsU0FBU0MsaUJBQWlCLHFCQUNuQ0MsRUFBUUYsU0FBU0MsaUJBQWlCLFVBR2xDSCxHQURBdEIsU0FBU3VCLEVBQU9GLEdBQVNNLFNBQVNsQyxPQUFPLEdBQUcsRUFDbkNPLFNBQVN1QixFQUFPRixHQUFTTSxTQUFTbEMsT0FBUyxHQUFLLEVBR2hETyxTQUFTdUIsRUFBT0YsR0FBU00sU0FBU2xDLE9BQU8sR0FFdEQ4QixFQUFPRixHQUFTTSxTQUFTTCxFQUFPLEdBQUdNLFlBQVlGLEVBQU1MLFFBSXJDLEdBQXJCckYsRUFBTzBCLFlBQ2R6QixFQUFNc0QsSUFBSSxnQkFBZ0JiLFFBQVEsU0FBU3RELEdBQ3ZDQSxFQUFLdUIsS0FBS0EsRUFDVixLQUFJLEdBQUk2QyxHQUFJLEVBQUdBLEVBQUlwRSxFQUFLcUUsT0FBUUQsR0FBSyxFQUFHLENBQ3BDLEdBQUlFLEdBQWN0RSxFQUFLb0UsRUFDQSxhQUF2QkUsRUFBWUMsU0FDUjNELEVBQU8rQixPQUFPNkIsTUFDVkMsR0FBSUgsRUFBWUcsR0FDaEJvQyxVQUFVLEVBQ1ZKLEtBQU1uQyxFQUFZd0MsTUFBTyxLQUFPeEMsRUFBWXFDLFNBQzVDNUIsS0FBTVQsRUFBWXlDLFNBQVd6QyxFQUFZMEMsS0FDekN0RixTQUFVdUQsV0FBV1gsRUFBWTVDLFVBQ2pDd0QsT0FBUUQsV0FBV1gsRUFBWWEsTUFDL0JDLFVBQVdwRSxFQUFVNEQsU0FBU04sRUFBdUIsVUFBRSxJQUN2RGUsVUFBV3JFLEVBQVU0RCxTQUFTTixFQUF1QixVQUFFLElBQ3ZEZ0IsSUFBS2hCLEVBQVlpQixNQUNqQkMsS0FBTWxCLEVBQVlrQixPQUcxQjVFLEVBQU9lLGdCQUFnQjhELFVBQVl6RixFQUNuQzBGLEVBQVlDLFlBQWEsRUFFekIvRSxFQUFPZ0YsT0FBUyxTQUFTQyxFQUFPekcsR0FDNUIsR0FBSTBHLEtBTUosT0FMQXJGLFNBQVFzRixRQUFRRixFQUFPLFNBQVN2RyxFQUFPMEcsR0FDL0IxRyxFQUFNRixLQUNOMEcsRUFBT0UsR0FBTzFHLEtBR2Z3RyxHQUVYbEYsRUFBT1UsS0FBTyxTQUFTMkUsR0FDbkIsR0FBSUMsR0FBUyxFQUNUQyxFQUFTQyxTQUFTQyxpQkFBaUIscUJBQ25DQyxFQUFRRixTQUFTQyxpQkFBaUIsVUFHbENILEdBREF0QixTQUFTdUIsRUFBT0YsR0FBU00sU0FBU2xDLE9BQU8sR0FBRyxFQUNuQ08sU0FBU3VCLEVBQU9GLEdBQVNNLFNBQVNsQyxPQUFTLEdBQUssRUFHaERPLFNBQVN1QixFQUFPRixHQUFTTSxTQUFTbEMsT0FBTyxHQUV0RDhCLEVBQU9GLEdBQVNNLFNBQVNMLEVBQU8sR0FBR00sWUFBWUYsRUFBTUwsUUFNckVyRixFQUFPOEMsY0FBZ0IsV0FDZjlDLEVBQU9zQixtQkFBa0J0QixFQUFPc0Isa0JBQW1CLEdBQ3ZEbkQsRUFBRSxpQkFBaUJJLGNBZ0J2QixJQUFJdUcsR0FBYzlFLEVBQU9lLGVBQ3pCK0QsR0FBWUMsWUFBYSxLQU03Qm5GLEVBQUl5RyxVQUFVLFlBQWEsV0FDdkIsT0FDSUMsU0FBVSxJQUNWMUIsS0FBTSxTQUFVMkIsRUFBT0MsRUFBU0MsR0FDeEJGLEVBQU1HLE9BQ05ILEVBQU1JLE1BQU1GLEVBQU1HLGVBS2xDQyxRQUFRdEgsVUFBVXFHLFlBQWMsU0FBU2tCLEdBQ3JDLE1BQU96SSxNQUFLMEksV0FBV0MsYUFBYUYsRUFBTXpJLEtBQUs0SSxpQkFNdkQ5SSxFQUFFeUQsUUFBUXNGLE9BQU8sV0FDYi9JLEVBQUVFLE1BQU04SSxZQUFjLEtBQ3hCaEosRUFBRSxpQkFBaUJpSixTQUFTLFVBQzVCakosRUFBRSxpQkFBaUJrSixZQUFZLFlBRS9CbEosRUFBRSxpQkFBaUJrSixZQUFZLFVBQy9CbEosRUFBRSxpQkFBaUJpSixTQUFTIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBsdXpoaW4uZG0gb24gMTEuMDcuMjAxNi5cclxuICovXHJcbihmdW5jdGlvbigpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICAkKCcuai1wb3B1cC1jbG9zZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmFyY3RpY21vZGFsKCdjbG9zZScpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJCgnLmotaW5wdXQtdGltZScpLm9uKCdmb2N1c2luJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCh0aGlzKS5hdHRyKHt0eXBlOiAndGltZScsIHZhbHVlOiAnMTI6MDAnfSk7XHJcbiAgICB9KS5vbignZm9jdXNvdXQnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKHRoaXMpLmF0dHIoJ3R5cGUnLCAndGV4dCcpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJCgnLmotcGhvbmUtbWFza2VkJykub24oJ2tleWRvd24nLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGlmICgkLmluQXJyYXkoZS5rZXlDb2RlLCBbNDYsIDgsIDksIDI3LCAxMywgMTEwLCAxOTBdKSAhPT0gLTEgfHxcclxuICAgICAgICAgICAgKGUua2V5Q29kZSA9PSA2NSAmJiAoIGUuY3RybEtleSA9PT0gdHJ1ZSB8fCBlLm1ldGFLZXkgPT09IHRydWUgKSApIHx8XHJcbiAgICAgICAgICAgIChlLmtleUNvZGUgPj0gMzUgJiYgZS5rZXlDb2RlIDw9IDQwKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICgoZS5zaGlmdEtleSB8fCAoZS5rZXlDb2RlIDwgNDggfHwgZS5rZXlDb2RlID4gNTcpKSAmJiAoZS5rZXlDb2RlIDwgOTYgfHwgZS5rZXlDb2RlID4gMTA3KSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICAkKCcuai1zY3JvbGx0by1saW5rJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAkLnNjcm9sbFRvKFxyXG4gICAgICAgICAgICAkKHRoaXMpLmRhdGEoJ3Njcm9sbHRvLWJsb2NrJyksXHJcbiAgICAgICAgICAgIHtkdXJhdGlvbjogNTAwfVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfSk7XHJcblxyXG59KSgpO1xyXG4oZnVuY3Rpb24oKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgQXJyYXkucHJvdG90eXBlLm1heCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiBNYXRoLm1heC5hcHBseShudWxsLCB0aGlzKTtcclxuICAgIH07XHJcblxyXG4gICAgQXJyYXkucHJvdG90eXBlLm1pbiA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiBNYXRoLm1pbi5hcHBseShudWxsLCB0aGlzKTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdtYWluJywgW10pO1xyXG5cclxuICAgIGFwcC5jb250cm9sbGVyKCdtYWluQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRodHRwJywgJyRjYWNoZUZhY3RvcnknLCAnJGh0dHBQYXJhbVNlcmlhbGl6ZXJKUUxpa2UnLCBmdW5jdGlvbigkc2NvcGUsICRodHRwLCAkaHR0cFBhcmFtU2VyaWFsaXplckpRTGlrZSwgJGNhY2hlRmFjdG9yeSkge1xyXG4gICAgICAgICRzY29wZS5BYnNlbnRFbXBsb3llZXMgPSB7fTtcclxuICAgICAgICAkc2NvcGUuY2FsbGJhY2tGb3JtRGF0YSA9IHt9O1xyXG4gICAgICAgICRzY29wZS5zaWduRm9ybURhdGEgPSB7fTtcclxuICAgICAgICAkc2NvcGUub3JkZXJGb3JtRGF0YSA9IHt9O1xyXG4gICAgICAgICRzY29wZS5zdWJGb3JtRGF0YSA9IHt9O1xyXG4gICAgICAgICRzY29wZS5iYXJrbGlCcm9rZXJGb3JtRGF0YSA9IHt9O1xyXG4gICAgICAgICRzY29wZS5pc0NhbGxiYWNrRm9ybVNlbmRlZCA9IGZhbHNlO1xyXG4gICAgICAgICRzY29wZS5pc1NpZ25Gb3JtU2VuZGVkID0gZmFsc2U7XHJcbiAgICAgICAgJHNjb3BlLmlzc3ViRm9ybVNlbmRlZCA9IGZhbHNlO1xyXG4gICAgICAgICRzY29wZS5pc09yZGVyRm9ybVNlbmRlZCA9IGZhbHNlO1xyXG4gICAgICAgICRzY29wZS5pc0JhcmtsaUJyb2tlckZvcm1TZW5kZWQgPSBmYWxzZTtcclxuICAgICAgICAkc2NvcGUuY3VycmVudFRhYiA9IDI7XHJcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLmhhc2guc3BsaXQoJy8nKTtcclxuICAgICAgICBpZiAoIWxvY2F0aW9uWzFdKSBsb2NhdGlvblsxXSA9ICdjaXR5JztcclxuICAgICAgICBpZiAoIWxvY2F0aW9uWzFdKSBsb2NhdGlvblsxXSA9ICdjb3VudHJ5JztcclxuICAgICAgICBpZiAoIWxvY2F0aW9uWzFdKSBsb2NhdGlvblsxXSA9ICdjb21tZXJjJztcclxuICAgICAgICBpZiAobG9jYXRpb25bMV0gPT09ICdjaXR5JykgJHNjb3BlLmN1cnJlbnRUYWIgPSAyO1xyXG4gICAgICAgIGlmIChsb2NhdGlvblsxXSA9PT0gJ2NvdW50cnknKSAkc2NvcGUuY3VycmVudFRhYiA9IDM7XHJcbiAgICAgICAgaWYgKGxvY2F0aW9uWzFdID09PSAnY29tbWVyYycpICRzY29wZS5jdXJyZW50VGFiID0gNDtcclxuICAgICAgICAkc2NvcGUucGFyYW1zID0gW107XHJcbiAgICAgICAgJHNjb3BlLmNvdW50cnkgPSBbXTtcclxuICAgICAgICAkc2NvcGUuY29tbWVyYyA9IFtdO1xyXG5cclxuXHJcblxyXG4gICAgICAgIC8qQ0FMTEJBQ0sgUE9QVVAgU1RBUlQqL1xyXG5cclxuICAgICAgICAkc2NvcGUuc2hvd0NhbGxiYWNrUG9wdXAgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKCRzY29wZS5pc0NhbGxiYWNrRm9ybVNlbmRlZCkgJHNjb3BlLmlzQ2FsbGJhY2tGb3JtU2VuZGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICQoJy5qLXBvcHVwLWNhbGxiYWNrJykuYXJjdGljbW9kYWwoKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAkc2NvcGUuc2VuZENhbGxiYWNrRm9ybSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBpZiAoJHNjb3BlLmNhbGxiYWNrRm9ybS4kdmFsaWQpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS5jYWxsYmFja0Zvcm1EYXRhWydzdWJqZWN0J10gPSAn0JfQsNC60LDQt9Cw0YLRjCDQvtCx0YDQsNGC0L3Ri9C5INC30LLQvtC90L7Qui4g0KHQutC40LTQutC4Lic7XHJcbiAgICAgICAgICAgICAgICAkaHR0cCh7XHJcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAnL3NlbmRtYWlsLnBocCcsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogJGh0dHBQYXJhbVNlcmlhbGl6ZXJKUUxpa2UoJHNjb3BlLmNhbGxiYWNrRm9ybURhdGEpLFxyXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9XHJcbiAgICAgICAgICAgICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuY2FsbGJhY2tGb3JtLiRzZXRQcmlzdGluZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHByb3AgaW4gJHNjb3BlLmNhbGxiYWNrRm9ybURhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmNhbGxiYWNrRm9ybURhdGFbcHJvcF0gPSAnJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmlzQ2FsbGJhY2tGb3JtU2VuZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcuai1wb3B1cC1jYWxsYmFjaycpLmFyY3RpY21vZGFsKCdjbG9zZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDMwMDApO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIC8qQ0FMTEJBQ0sgUE9QVVAgRU5EKi9cclxuXHJcbiAgICAgICAgLypTSUdOIFBPUFVQIFNUQVJUKi9cclxuICAgICAgICAkc2NvcGUuc2hvd1NpZ25Qb3B1cCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBpZiAoJHNjb3BlLmlzU2lnbkZvcm1TZW5kZWQpICRzY29wZS5pc1NpZ25Gb3JtU2VuZGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICQoJy5qLXBvcHVwLWdyYXRpdHVkZS1zaWduJykuYXJjdGljbW9kYWwoKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAkc2NvcGUuc2VuZFNpZ25Gb3JtID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGlmICgkc2NvcGUuc2lnbkZvcm0uJHZhbGlkKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuc2lnbkZvcm1EYXRhWydzdWJqZWN0J10gPSAn0J/QvtC00L/QuNGB0LrQsCDQvdCwIERpc2NvdW50JztcclxuICAgICAgICAgICAgICAgICRodHRwKHtcclxuICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICAgICAgICAgICAgICB1cmw6ICcvc2VuZG1haWwucGhwJyxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiAkaHR0cFBhcmFtU2VyaWFsaXplckpRTGlrZSgkc2NvcGUuc2lnbkZvcm1EYXRhKSxcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfVxyXG4gICAgICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnNpZ25Gb3JtLiRzZXRQcmlzdGluZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHByb3AgaW4gJHNjb3BlLnNpZ25Gb3JtRGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc2lnbkZvcm1EYXRhW3Byb3BdID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5pc1NpZ25Gb3JtU2VuZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcuai1wb3B1cC1ncmF0aXR1ZGUtc2lnbicpLmFyY3RpY21vZGFsKCdjbG9zZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDMwMDApO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc29sZS5sb2coJHNjb3BlLnNpZ25Gb3JtKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIC8qU0lHTiBQT1BVUCBFTkQqL1xyXG5cclxuICAgICAgICAvKlJFUVVFU1QgRk9STSBTRU5ESU5HIFNUQVJUKi9cclxuXHJcbiAgICAgICAgJHNjb3BlLnNlbmRPcmRlckZvcm0gPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKCRzY29wZS5vcmRlckZvcm0uJHZhbGlkKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUub3JkZXJGb3JtRGF0YVsnc3ViamVjdCddID0gJ9CX0LDQutCw0LfQsNGC0Ywg0L7QsdGA0LDRgtC90YvQuSDQt9Cy0L7QvdC+0LouINCh0LrQuNC00LrQuC4nO1xyXG4gICAgICAgICAgICAgICAgJGh0dHAoe1xyXG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9zZW5kbWFpbC5waHAnLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6ICRodHRwUGFyYW1TZXJpYWxpemVySlFMaWtlKCRzY29wZS5vcmRlckZvcm1EYXRhKSxcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfVxyXG4gICAgICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLmotcG9wdXAtZ3JhdGl0dWRlLXJlcXVlc3QnKS5hcmN0aWNtb2RhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJy5qLXBvcHVwLWdyYXRpdHVkZS1yZXF1ZXN0JykuYXJjdGljbW9kYWwoJ2Nsb3NlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMzAwMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLm9yZGVyRm9ybS4kc2V0UHJpc3RpbmUoKTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwcm9wIGluICRzY29wZS5vcmRlckZvcm1EYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5vcmRlckZvcm1EYXRhW3Byb3BdID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5pc09yZGVyRm9ybVNlbmRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmotcG9wdXAtZ3JhdGl0dWRlLXJlcXVlc3QnKS5hcmN0aWNtb2RhbCgnY2xvc2UnKTtcclxuICAgICAgICAgICAgICAgICAgICB9LCAzMDAwKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgJHNjb3BlLnNlbmRTdWJGb3JtID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGlmICgkc2NvcGUuc3ViRm9ybS4kdmFsaWQpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS5zdWJGb3JtRGF0YVsnc3ViamVjdCddID0gJ9Cf0L7QtNC/0LjRgdC60LAg0L3QsCBEaXNjb3VudCc7XHJcbiAgICAgICAgICAgICAgICAkaHR0cCh7XHJcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAnL3NlbmRtYWlsLnBocCcsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogJGh0dHBQYXJhbVNlcmlhbGl6ZXJKUUxpa2UoJHNjb3BlLnN1YkZvcm1EYXRhKSxcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfVxyXG4gICAgICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLmotcG9wdXAtZ3JhdGl0dWRlLXNpZ24nKS5hcmN0aWNtb2RhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJy5qLXBvcHVwLWdyYXRpdHVkZS1zaWduJykuYXJjdGljbW9kYWwoJ2Nsb3NlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMzAwMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN1YkZvcm0uJHNldFByaXN0aW5lKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcHJvcCBpbiAkc2NvcGUuc3ViRm9ybURhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN1YkZvcm1EYXRhW3Byb3BdID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5pc3N1YkZvcm1TZW5kZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJy5qLXBvcHVwLWdyYXRpdHVkZS1zaWduJykuYXJjdGljbW9kYWwoJ2Nsb3NlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMzAwMCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGlmKCRzY29wZS5jdXJyZW50VGFiID09IDIpIHtcclxuICAgICAgICAgICAgJGh0dHAuZ2V0KCdjaXR5Lmpzb24nKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGRhdGEuc29ydChzb3J0KTtcclxuICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRGbGF0ID0gZGF0YVtpXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudEZsYXQuc3VwdHlwZSA9PSAnY2l0eScpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnBhcmFtcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBjdXJyZW50RmxhdC5pZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdHk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb29tczogKHBhcnNlSW50KGN1cnJlbnRGbGF0WyduYl9yb29tcyddKSk/IChwYXJzZUludChjdXJyZW50RmxhdFsnbmJfcm9vbXMnXSkrJyAtINC60L7QvC4g0LrQsi4sICcpIDogJyAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVjb3JhdGlvbjogY3VycmVudEZsYXQuZGVjb3JhdGlvbiB8fCAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb29yOiAocGFyc2VJbnQoY3VycmVudEZsYXQuZmxvb3IpKT8gJywgJysocGFyc2VJbnQoY3VycmVudEZsYXQuZmxvb3IpICsgJy3QuSDRjdGC0LDQticpIDogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkOiBjdXJyZW50RmxhdC5lc3RhdGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNjb3VudDogcGFyc2VGbG9hdChjdXJyZW50RmxhdC5kaXNjb3VudCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcXVhcmU6IHBhcnNlRmxvYXQoY3VycmVudEZsYXQuYXJlYSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbGRfcHJpY2U6IGFkZFNwYWNlcyhwYXJzZUludChjdXJyZW50RmxhdFsnb2xkX3ByaWNlJ10vMSkpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3X3ByaWNlOiBhZGRTcGFjZXMocGFyc2VJbnQoY3VycmVudEZsYXRbJ25ld19wcmljZSddLzEpKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZzogY3VycmVudEZsYXQucGhvdG8sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5rOiBjdXJyZW50RmxhdC5saW5rXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLkFic2VudEVtcGxveWVlcy5lbXBsb3llZXMgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIGFiRW1wbG95ZWVzLmRhdGFMb2FkZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuZmlsdGVyID0gZnVuY3Rpb24oaXRlbXMsIGF0dHIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhbmd1bGFyLmZvckVhY2goaXRlbXMsIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZVthdHRyXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnRlc3QgPSBmdW5jdGlvbihjdXJyZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjZW50ZXIgPSAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmItZGlzY291bnRfaW5uZXInKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmItZm9ybScpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnNlSW50KGJsb2Nrc1tjdXJyZW50XS5jaGlsZHJlbi5sZW5ndGgvMiklMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VudGVyID0gcGFyc2VJbnQoYmxvY2tzW2N1cnJlbnRdLmNoaWxkcmVuLmxlbmd0aCAvIDIpICsgMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbnRlciA9IHBhcnNlSW50KGJsb2Nrc1tjdXJyZW50XS5jaGlsZHJlbi5sZW5ndGgvMik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2tzW2N1cnJlbnRdLmNoaWxkcmVuW2NlbnRlci0xXS5pbnNlcnRBZnRlcihmb3Jtc1tjdXJyZW50XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2UgaWYgKCRzY29wZS5jdXJyZW50VGFiID09IDMpIHtcclxuICAgICAgICAgICAgJGh0dHAuZ2V0KCdjb3VudHJ5Lmpzb24nKS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGRhdGEuc29ydChzb3J0KTtcclxuICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRGbGF0ID0gZGF0YVtpXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudEZsYXQuc3VwdHlwZSA9PSAnY291bnRyeScpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnBhcmFtcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBjdXJyZW50RmxhdC5pZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50cnk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjOiBjdXJyZW50RmxhdC5kaXJlY3Rpb24gKyAnLCAnICsgY3VycmVudEZsYXQuZGlzdGFuY2UrJyDQutC8INC+0YIg0JzQmtCQ0JQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZDogY3VycmVudEZsYXQuZXN0YXRlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzY291bnQ6IHBhcnNlRmxvYXQoY3VycmVudEZsYXQuZGlzY291bnQpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3F1YXJlOiAocGFyc2VGbG9hdChjdXJyZW50RmxhdFsnbGFuZF9hcmVhJ10pKT8gK2N1cnJlbnRGbGF0WydsYW5kX2FyZWEnXSsnINGB0L7Rgi4sICc6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaG91c2VhcmVhOiAocGFyc2VGbG9hdChjdXJyZW50RmxhdFsnaG91c2VfYXJlYSddKSk/ICcnK2N1cnJlbnRGbGF0Wydob3VzZV9hcmVhJ10rJyDQvMKyJzogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbGRfcHJpY2U6IGFkZFNwYWNlcyhwYXJzZUludChjdXJyZW50RmxhdFsnb2xkX3ByaWNlJ10pKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld19wcmljZTogYWRkU3BhY2VzKHBhcnNlSW50KGN1cnJlbnRGbGF0WyduZXdfcHJpY2UnXSkpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nOiBjdXJyZW50RmxhdC5waG90byxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbms6IGN1cnJlbnRGbGF0LmxpbmtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5BYnNlbnRFbXBsb3llZXMuZW1wbG95ZWVzID0gZGF0YTtcclxuICAgICAgICAgICAgICAgICAgICBhYkVtcGxveWVlcy5kYXRhTG9hZGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmZpbHRlciA9IGZ1bmN0aW9uKGl0ZW1zLCBhdHRyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSB7fTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYW5ndWxhci5mb3JFYWNoKGl0ZW1zLCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWVbYXR0cl0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS50ZXN0ID0gZnVuY3Rpb24oY3VycmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2VudGVyID0gMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5iLWRpc2NvdW50X2lubmVyJyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5iLWZvcm0nKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChibG9ja3NbY3VycmVudF0uY2hpbGRyZW4ubGVuZ3RoLzIpJTIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbnRlciA9IHBhcnNlSW50KGJsb2Nrc1tjdXJyZW50XS5jaGlsZHJlbi5sZW5ndGggLyAyKSArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXIgPSBwYXJzZUludChibG9ja3NbY3VycmVudF0uY2hpbGRyZW4ubGVuZ3RoLzIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJsb2Nrc1tjdXJyZW50XS5jaGlsZHJlbltjZW50ZXItMV0uaW5zZXJ0QWZ0ZXIoZm9ybXNbY3VycmVudF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICgkc2NvcGUuY3VycmVudFRhYiA9PSA0KSB7XHJcbiAgICAgICAgICAgICRodHRwLmdldCgnY29tbWVyYy5qc29uJykuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBkYXRhLnNvcnQoc29ydCk7XHJcbiAgICAgICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkgKz0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50RmxhdCA9IGRhdGFbaV07XHJcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudEZsYXQuc3VwdHlwZSA9PSAnY29tbWVyY2UnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5wYXJhbXMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogY3VycmVudEZsYXQuaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21tZXJjZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2M6IGN1cnJlbnRGbGF0Lm1ldHJvKyAnLCAnICsgY3VycmVudEZsYXQuZGlzdGFuY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkOiBjdXJyZW50RmxhdC5hZGRyZXNzIHx8IGN1cnJlbnRGbGF0Lm5hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNjb3VudDogcGFyc2VGbG9hdChjdXJyZW50RmxhdC5kaXNjb3VudCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcXVhcmU6IHBhcnNlRmxvYXQoY3VycmVudEZsYXQuYXJlYSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbGRfcHJpY2U6IGFkZFNwYWNlcyhwYXJzZUludChjdXJyZW50RmxhdFsnb2xkX3ByaWNlJ10vMSkpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3X3ByaWNlOiBhZGRTcGFjZXMocGFyc2VJbnQoY3VycmVudEZsYXRbJ25ld19wcmljZSddLzEpKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZzogY3VycmVudEZsYXQucGhvdG8sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5rOiBjdXJyZW50RmxhdC5saW5rXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuQWJzZW50RW1wbG95ZWVzLmVtcGxveWVlcyA9IGRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgYWJFbXBsb3llZXMuZGF0YUxvYWRlZCA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5maWx0ZXIgPSBmdW5jdGlvbihpdGVtcywgYXR0cikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0ge307XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaChpdGVtcywgZnVuY3Rpb24odmFsdWUsIGtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlW2F0dHJdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUudGVzdCA9IGZ1bmN0aW9uKGN1cnJlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNlbnRlciA9IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYi1kaXNjb3VudF9pbm5lcicpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYi1mb3JtJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyc2VJbnQoYmxvY2tzW2N1cnJlbnRdLmNoaWxkcmVuLmxlbmd0aC8yKSUyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXIgPSBwYXJzZUludChibG9ja3NbY3VycmVudF0uY2hpbGRyZW4ubGVuZ3RoIC8gMikgKyAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VudGVyID0gcGFyc2VJbnQoYmxvY2tzW2N1cnJlbnRdLmNoaWxkcmVuLmxlbmd0aC8yKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBibG9ja3NbY3VycmVudF0uY2hpbGRyZW5bY2VudGVyLTFdLmluc2VydEFmdGVyKGZvcm1zW2N1cnJlbnRdKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJHNjb3BlLnNob3dTaWduUG9wdXAgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKCRzY29wZS5pc1NpZ25Gb3JtU2VuZGVkKSAkc2NvcGUuaXNTaWduRm9ybVNlbmRlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkKCcuai1wb3B1cC1zaWduJykuYXJjdGljbW9kYWwoKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGZ1bmN0aW9uIGFkZFNwYWNlcyhuKSB7XHJcbiAgICAgICAgICAgIHZhciByeCA9IC8oXFxkKykoXFxkezN9KS87XHJcbiAgICAgICAgICAgIHJldHVybiBTdHJpbmcobilcclxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9eXFxkKy8sIGZ1bmN0aW9uICh3KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHJ4LnRlc3QodykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdyA9IHcucmVwbGFjZShyeCwgJyQxICQyJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB3O1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIHNvcnQob2JqMSwgb2JqMikge1xyXG4gICAgICAgICAgICByZXR1cm4gb2JqMi5kaXNjb3VudCAtIG9iajEuZGlzY291bnQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgYWJFbXBsb3llZXMgPSAkc2NvcGUuQWJzZW50RW1wbG95ZWVzO1xyXG4gICAgICAgIGFiRW1wbG95ZWVzLmRhdGFMb2FkZWQgPSBmYWxzZTtcclxuXHJcblxyXG5cclxuXHJcbiAgICB9XSk7XHJcbiAgICBhcHAuZGlyZWN0aXZlKFwicmVwZWF0RW5kXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogXCJBXCIsXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChzY29wZS4kbGFzdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNjb3BlLiRldmFsKGF0dHJzLnJlcGVhdEVuZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfSk7XHJcbiAgICBFbGVtZW50LnByb3RvdHlwZS5pbnNlcnRBZnRlciA9IGZ1bmN0aW9uKGVsZW0pIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtLCB0aGlzLm5leHRTaWJsaW5nKTtcclxuICAgIH07XHJcbn0pKCk7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IGx1emhpbi5kbSBvbiAxMS4wNy4yMDE2LlxyXG4gKi9cclxuJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbiAoKXtcclxuXHRpZigkKHRoaXMpLnNjcm9sbFRvcCgpID4gNTQwKSB7XHJcblx0XHQkKFwiLmZpeGVkLWhlYWRlclwiKS5hZGRDbGFzcygnc3RpY2t5Jyk7XHJcblx0XHQkKFwiLmZpeGVkLWhlYWRlclwiKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcblx0fSBlbHNlIHtcclxuXHRcdCQoXCIuZml4ZWQtaGVhZGVyXCIpLnJlbW92ZUNsYXNzKCdzdGlja3knKTtcclxuXHRcdCQoXCIuZml4ZWQtaGVhZGVyXCIpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuXHR9XHJcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
